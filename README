How to retrain last few layers of Object Detection models using transfer learning.

credit: https://medium.com/coinmonks/part-1-2-step-by-step-guide-to-data-preparation-for-transfer-learning-using-tensorflows-object-ac45a6035b7a
https://github.com/chewwt/shiny-octo-umbrella
https://github.com/tzutalin/labelImg


1. source venv3/bin/activate (py3 has pyqt5 dependency for labelimg)
2. open extract_images_rosbag.bash and edit the 5 variables (or run python scripts/extract.py and enter arguments in command line).  
3. edit predefined_classes.txt. run python labelImg/labelImg.py [IMAGE_PATH] predefined_classes.txt
4. Create bounding boxes for each image and label accordingly. Save before pressing next.
5. Save xml annotations to the annotations folder.
6. Run 'python scripst/xml_to_csv.py [ANNOTATIONS_PATH] 'to create csv label
7. Run jupyter notebook. navigate and open split_labels.ipynb. currently 80% train 20% test split.
8. export object_detection PYTHON_PATH slim
9. edit generate_tf_tfrecord.py to include label id for objects. ex: if row == 'bat' id = 1.

10. Create train data:
  python generate_tfrecord.py --csv_input=train_labels.csv  --image_dir=images --output_path=train.record

11. Create test data:
  python generate_tfrecord.py --csv_input=test_labels.csv --image_dir=images --output_path=test.record

12. create a label_map.pbtxt. item{
				    id:1
				    name: bat}

13. edit pipeline.config from original model. 
    13.1 edit numofclasses to 2 (or number of objects u are detecting)
    13.2 configure the PATH_TO_BE_CONFIGURED/ in train.config in pipeline.config
    13.3 edit num_examples to be number of objects in test.record

14. run object_detection/model_main.py. python object_detection/model_main.py     --pipeline_config_path=/home/hashir/Desktop/bbauv/ml_models/ssdlite_mobilenet_v2_coco_2018_05_09/pipeline.config     --model_dir=/home/hashir/Desktop/bbauv/ml_models/ml_training/bat_wolf     --num_train_steps=50000     --sample_1_of_n_eval_examples=1

15. you can open another terminal to monitor progress on tensorboard. tensorboard --logdir=/home/hashir/Desktop/bbauv/ml_models/ml_training/bat_wolf

16. export the model you have just trained. choose one of the checkpoints generated
    python object_detection/export_inference_graph.py     --input_type=image_tensor     --pipeline_config_path=/home/hashir/Desktop/bbauv/ml_models/ssdlite_mobilenet_v2_coco_2018_05_09/pipeline.config     --trained_checkpoint_prefix=/home/hashir/Desktop/bbauv/ml_models/ml_training/bat_wolf/model.ckpt-472    --output_directory=/home/hashir/Desktop/bbauv/ml_models/ml_training/bat_wolf/output_model/

17. Test if the model is accurate on the test images. run jupyter notebook on object_detection/object_detection_tutorial.ipynb. change the necessary variables (model, images) to get it working.




